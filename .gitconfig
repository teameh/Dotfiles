[user]
	name = Tieme van Veen
	email = user@example.com
	signingkey = YOUR_GPG_KEY_HERE

[core]
	mergeoptions = --no-edit
	excludesfile = /Users/username/.gitignore_global
	trustctime = false
	autocrlf = input

[apply]
	whitespace = nowarn

[branch "master"]
	remote = origin
	merge = refs/heads/master

[merge]
	tool = opendiff

[mergetool]
	keepBackup = false

[rebase]
	instructionFormat = [%aN] %s (%ai)

[push]
	default = current

[diff]
	tool = opendiff

[color]
	diff = auto
	status = auto
	branch = auto
	grep = auto
	interactive = auto
	showbranch = auto
	ui = true
	pager = true

[rerere]
	enabled = false

[commit]
	gpgsign = true

[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true

[alias]
	a = add
	aa = add .
	st = status -sb
	br = branch -a -vv
	co = checkout
	cob = checkout -b
	cop = checkout --patch
	d = diff
	resetp = reset --patch
	addp = add --patch
	ci = commit -m
	amend = commit --amend --no-edit
	pick = cherry-pick
	graph = log --graph --all
	f = fetch --prune
	
	stashlist = stash list --date=short
	stashlist-full = stash-list
	stashed = stash list --date=short
	sa = "!sh -c 'git stash apply stash@{$1}' -"
	sd = "!sh -c 'git stash drop stash@{$1}' -"
	stashall = stash --include-untracked
	squash = "!f() { git rebase -i HEAD~$1; }; f"

	filehist = log --graph --stat
	hist   = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%ad%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%n''' --all --date=local
	histoneline   = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%ad%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all --date=local
	histbr = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%ad%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%n''' --date=local

	# reset permissions
	permission-reset = !git diff -p -R | grep -E \"^(diff|(old|new) mode)\" | git apply

	# reset pending changes
	goddammit = reset @ --hard

	# Get the current branch name (not so useful in itself, but used in other aliases)
	branch-name = "!git rev-parse --abbrev-ref HEAD"

	# Push the current branch to the remote "origin", and set it to track the upstream branch
	publish = "!git push -u origin $(git branch-name)"

	# Delete the remote version of the current branch
	unpublish = "!git push origin :$(git branch-name)"

	# Show changes that have been staged
	diffc = diff --cached

	# shows branches containing commit
	contains = branch --contains

	# manage deletions
	show-deletions = log --diff-filter=D --summary
	when-deleted = log -1 --all --
	restore-file = !git checkout $(git rev-list -n 1 HEAD -- "$1")^ -- "$1"

	# Push the current branch to the remote "origin", and set it to track the upstream branch
	pub = "!git push -u origin $(git branch-name)"

	# show ignored items
	ignored = status --ignored

	# https://coderwall.com/p/ok-iyg/git-prev-next
	prev = checkout HEAD^1
	next = "!sh -c 'git log --reverse --pretty=%H master | awk \"/$(git rev-parse HEAD)/{getline;print}\" | xargs git checkout'"
	
	master = checkout master
	development = checkout development
	dev = checkout development

